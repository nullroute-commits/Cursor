# CI/CD Dockerfile
# Multi-stage build for continuous integration
# Last updated: 2025-08-30 22:40:55 UTC by nullroute-commits

ARG PYTHON_VERSION=3.12.5
ARG BUILDPLATFORM=linux/amd64
ARG TARGETPLATFORM=linux/amd64

FROM python:${PYTHON_VERSION}-slim as ci-base

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    CI=true

# Set work directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    libpq-dev \
    libbz2-dev \
    libffi-dev \
    libssl-dev \
    libxml2-dev \
    libxslt-dev \
    zlib1g-dev \
    libjpeg-dev \
    libpng-dev \
    curl \
    wget \
    git \
    netcat-openbsd \
    docker.io \
    openssh-client \
    rsync \
    jq \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies for CI
COPY requirements/development.txt /tmp/requirements.txt
RUN pip install --no-cache-dir -r /tmp/requirements.txt

# Install additional CI tools
RUN pip install --no-cache-dir \
    coverage==7.3.2 \
    pytest-cov==4.1.0 \
    pytest-xdist==3.5.0 \
    bandit==1.7.5 \
    safety==2.3.5

# Copy CI scripts
COPY ci/ /app/ci/
RUN chmod +x /app/ci/*.sh

# Copy application code
COPY . /app/

# Create CI user
RUN groupadd -r ci && useradd -r -g ci ci

# Create necessary directories
RUN mkdir -p /app/logs /app/staticfiles /app/media /app/.cache && \
    chown -R ci:ci /app

USER ci

# Default entrypoint
ENTRYPOINT ["/app/ci/entrypoint.sh"]
CMD ["--help"]