[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "django-app"
version = "1.0.0"
description = "Django 5 Multi-Architecture CI/CD Pipeline with RBAC and Audit Logging"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "nullroute-commits", email = "nullroute-commits@users.noreply.github.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Framework :: Django",
    "Framework :: Django :: 5.0",
]
requires-python = ">=3.12"
dependencies = [
    "Django==5.0.2",
    "sqlalchemy==1.4.49",
    "psycopg2-binary==2.9.9",
    "python-memcached==1.59",
    "pika==1.3.2",
    "gunicorn==21.2.0",
]

[project.optional-dependencies]
dev = [
    "black==23.9.1",
    "flake8==6.1.0",
    "mypy==1.5.1",
    "django-stubs==4.2.6",
    "sqlalchemy-stubs==0.4.0",
    "django-debug-toolbar==4.2.0",
    "pytest==7.4.3",
    "pytest-django==4.7.0",
]
test = [
    "pytest==7.4.3",
    "pytest-django==4.7.0",
    "pytest-cov==4.1.0",
    "factory-boy==3.3.0",
]
prod = [
    "sentry-sdk==1.30.0",
    "django-pylibmc==0.6.1",
    "pylibmc==1.6.3",
    "uwsgi==2.0.22",
]

[project.urls]
Homepage = "https://github.com/nullroute-commits/Test"
Repository = "https://github.com/nullroute-commits/Test"
Issues = "https://github.com/nullroute-commits/Test/issues"

[tool.black]
line-length = 120
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_django = "django"
known_first_party = ["app", "config"]
sections = ["FUTURE", "STDLIB", "DJANGO", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings.testing"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = """
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=app
    --cov-report=html
    --cov-report=term
    --cov-fail-under=80
    --no-migrations
    --reuse-db
"""
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "security: marks tests as security tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/venv/*",
    "*/env/*",
    "manage.py",
    "*/settings/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101", "B601"]

[tool.bandit.assert_used]
skips = ["*/tests/*", "*/test_*.py"]